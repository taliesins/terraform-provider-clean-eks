package provider

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccJobResource(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create and Read testing
			{
				Config: testAccJobResourceConfig(true, true, true),
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("eksclean_job.test", "remove_aws_cni", "true"),
					resource.TestCheckResourceAttr("eksclean_job.test", "remove_kube_proxy", "true"),
					resource.TestCheckResourceAttr("eksclean_job.test", "import_coredns_to_helm", "true"),
					resource.TestCheckResourceAttr("eksclean_job.test", "id", "example-id"),
				),
			},
			// ImportState testing
			{
				ResourceName:      "eksclean_job.test",
				ImportState:       true,
				ImportStateVerify: true,
				// This is not normally necessary, but is here because this
				// example code does not have an actual upstream service.
				// Once the Read method is able to refresh information from
				// the upstream service, this can be removed.
				ImportStateVerifyIgnore: []string{"configurable_attribute", "defaulted"},
			},
			// Update and Read testing
			{
				Config: testAccJobResourceConfig(true, true, true),
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttr("eksclean_job.test", "configurable_attribute", "two"),
				),
			},
			// Delete testing automatically occurs in TestCase
		},
	})
}

func testAccJobResourceConfig(removeAwsCni bool, removeKubeProxy bool, importCorednsToHelm bool) string {
	return fmt.Sprintf(`
resource "eksclean_job" "test" {
  remove_aws_cni = %t
  remove_kube_proxy = %t
  import_coredns_to_helm = %t
}
`, removeAwsCni, removeKubeProxy, importCorednsToHelm)
}
